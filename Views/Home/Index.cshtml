<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Real-Time Chat with User Status</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .status-dot {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }

        .online {
            background-color: green;
        }

        .offline {
            background-color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-center">Real-Time Chat</h1>
        <div class="row">
            <div class="col-md-12">
                <input type="text" id="userName" value="@ViewBag.UserName" hidden />
                <input type="text" class="form-control" id="messageInput" placeholder="Type your message"></input>
                <button class="btn btn-primary btn-block mt-2" onclick="sendMessage()">Send</button>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <h3>Online Users</h3>
                <ul id="usersList"></ul>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <ul id="messagesList"></ul>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script>
        document.addEventListener("keypress", function (event) {
            if (event.keyCode === 13) {
                sendMessage();
            }
        });
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceiveMessage", (user, message, isOnline) => {
            const msg = document.createElement("li");
            msg.innerHTML = `<span></span>${user}: ${message}`;// class="status-dot ${isOnline ? 'online' : 'offline'}"

            const firstMessage = document.getElementById("messagesList").firstChild;
            document.getElementById("messagesList").insertBefore(msg, firstMessage);
        });

        connection.on("UpdateUserList", (users) => {
            const usersList = document.getElementById("usersList");
            usersList.innerHTML = "";
            users.forEach(user => {
                const userItem = document.createElement("li");
                userItem.innerHTML = `<span class="status-dot online"></span>${user}`;
                usersList.appendChild(userItem);
            });
        });

        connection.on("UserConnected", (user) => {
            const usersList = document.getElementById("usersList");
            const userItem = document.createElement("li");
            userItem.innerHTML = `<span class="status-dot online"></span>${user}`;
            usersList.appendChild(userItem);
        });

        connection.on("UserDisconnected", (user) => {
            const usersList = document.getElementById("usersList");
            const userItems = usersList.getElementsByTagName("li");
            for (let i = 0; i < userItems.length; i++) {
                if (userItems[i].textContent.includes(user)) {
                    userItems[i].querySelector(".status-dot").className = "status-dot offline";
                }
            }
        });

        connection.start().catch(err => console.error(err.toString()));

        function sendMessage() {
            const messageInput = document.getElementById("messageInput").value.trim();
            if (messageInput !== '') {
                const userName = $("#userName").val(); // Replace with actual user name logic
                connection.invoke("SendMessage", userName, messageInput).catch(err => console.error(err.toString()));
                document.getElementById("messageInput").value = '';
            } else {
                alert("Please enter a message.");
            }
        }
    </script>
</body>
</html>
